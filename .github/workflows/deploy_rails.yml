name: Rails deploy to ECR and ECS

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'rails/**'

jobs:
  rails_deploy_to_ecr_and_ecs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rails
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          sparse-checkout: rails

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ap-northeast-1

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Build and push Docker image to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_RAILS_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Get current task definition from ECS
        id: get-task-def
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ secrets.AWS_ECS_RAILS_TASK_DEFINITION_ARN }} \
            --region ap-northeast-1 \
            --query 'taskDefinition' \
            > task-def.json
          echo "===== task-def.json ====="
          cat task-def.json

      - name: Update task definition with new image
        id: update-task-def
        run: |
          set -e
          jq '.containerDefinitions[0].image = "\"${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_RAILS_REPOSITORY }}:${{ github.sha }}\""' task-def.json > new-task-def.json || { echo "Failed to update task definition"; exit 1; }
          echo "===== new-task-def.json ====="
          cat new-task-def.json
          

      - name: Clean up and format task definition for registration
        id: clean-task-def
        run: |
          set -e
          jq 'del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' new-task-def.json > new-task-def.json || exit 1
          # jq '.' new-task-def.json > formatted-task-def.json || exit 1
          echo "===== formatted-task-def.json ====="
          cat formatted-task-def.json

      - name: Render new task definition with updated image
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: formatted-task-def.json
          container-name: ${{ secrets.AWS_ECS_RAILS_CONTAINER_NAME }}
          image: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: ${{ secrets.AWS_ECS_RAILS_SERVICE_NAME }}
          cluster: ${{ secrets.AWS_ECS_RAILS_CLUSTER_NAME }}
          wait-for-service-stability: true
