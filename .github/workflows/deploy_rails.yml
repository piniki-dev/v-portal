name: Rails deploy to ECR and ECS

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'rails/**'

jobs:
  rails_deploy_to_ecr_and_ecs:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rails
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          sparse-checkout: rails

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ap-northeast-1

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Build and push Docker image to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_RAILS_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build . --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Render new task definition with updated image
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ secrets.AWS_ECS_RAILS_TASK_DEFINITION_ARN }} 
          container-name: ${{ secrets.AWS_ECS_RAILS_CONTAINER_NAME }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_RAILS_REPOSITORY }}:${{ github.sha }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: ${{ secrets.AWS_ECS_RAILS_SERVICE_NAME }}
          cluster: ${{ secrets.AWS_ECS_RAILS_CLUSTER_NAME }}
          wait-for-service-stability: true
